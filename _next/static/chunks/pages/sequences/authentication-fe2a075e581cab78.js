(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6178],{8574:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/sequences/authentication",function(){return n(5162)}])},5162:function(e,t,n){"use strict";n.r(t),n.d(t,{__toc:function(){return c}});var r=n(5893),a=n(2673),i=n(5417),s=n(3209);n(4759);var o=n(2643),l=n(8757);let c=[];function u(e){return(0,r.jsx)(l.G,{chart:"sequenceDiagram\n    participant ClientApp as Client Application\n    participant ClientService as Client AuthService\n    participant ClientHandler as Client AuthHandler\n    participant ServerHandler as Server AuthHandler\n    participant ServerStorage as Server Storage\n    participant ServerSession as Server SessionManager\n    participant OtherClients as Other Online Clients\n\n    Note over ClientApp, ServerSession: User Registration\n    ClientApp->>ClientService: register(username, password)\n    ClientService->>ServerHandler: REGISTER_REQUEST\n    ServerHandler->>ServerStorage: create_user(username, password)\n    ServerStorage-->>ServerHandler: User object or None\n    alt Registration Success\n        ServerHandler-->>ClientService: REGISTER_RESPONSE (success=true, user_id)\n    else Registration Failure\n        ServerHandler-->>ClientService: REGISTER_RESPONSE (success=false)\n    end\n    ClientService->>ClientHandler: handle_register_response(message)\n    ClientHandler->>ClientApp: Update UI (registration result)\n\n    Note over ClientApp, ServerSession: User Login\n    ClientApp->>ClientService: login(username, password)\n    ClientService->>ServerHandler: LOGIN_REQUEST\n    ServerHandler->>ServerStorage: verify_user_credentials(username, password)\n    ServerStorage-->>ServerHandler: User object or None\n    alt Login Success\n        ServerHandler->>ServerSession: authenticate_session(writer, user_id, username)\n        ServerHandler->>ServerStorage: update_user_last_login(user_id)\n        ServerHandler-->>ClientService: LOGIN_RESPONSE (success=true, user_id, username, token)\n        ServerHandler->>OtherClients: USER_STATUS_UPDATE_NOTIFICATION (user_id, username, ONLINE)\n        ClientService->>ClientHandler: handle_login_response(message)\n        ClientHandler->>ClientApp: Update UI (authenticated, user_id, username, token)\n        ClientApp->>ClientService: query_all_user_status() (Post-login action)\n        ClientApp->>ClientService: get_my_groups() (Post-login action)\n    else Login Failure\n        ServerHandler-->>ClientService: LOGIN_RESPONSE (success=false)\n        ClientService->>ClientHandler: handle_login_response(message)\n        ClientHandler->>ClientApp: Update UI (login failed)\n    end\n\n    Note over ClientApp, ServerSession: User Logout\n    ClientApp->>ClientService: logout()\n    ClientService->>ServerHandler: LOGOUT_REQUEST\n    alt User was Authenticated\n        ServerHandler->>ServerSession: deauthenticate_session(writer)\n        ServerSession-->>ServerHandler: deauthentication_result\n        ServerHandler-->>ClientService: LOGOUT_RESPONSE (success=true)\n        %% ServerHandler->>OtherClients: USER_STATUS_UPDATE_NOTIFICATION (user_id, username, OFFLINE) - TODO: Implement broadcast\n    else User Not Authenticated\n        ServerHandler-->>ClientService: ERROR_RESPONSE (Not authenticated)\n    end\n    ClientService->>ClientHandler: handle_logout_response(message)\n    ClientHandler->>ClientApp: Update UI (logged out)"})}let d={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,o.a)(),e.components);return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)},pageOpts:{filePath:"pages/sequences/authentication.md",route:"/sequences/authentication",timestamp:1749055448e3,pageMap:[{kind:"Meta",data:{index:{title:"Introduction",type:"page",display:"hidden"},demo:{title:"Demo & Introduction",type:"page"},protocol:{title:"Protocol",type:"page"},sequence:{title:"Sequence Flow",type:"page"},database:{title:"Database Design",type:"page"},uml:{title:"UML Structure",type:"page"},"stress-test":{title:"Stress Testing",type:"page",display:"hidden"}}},{kind:"MdxPage",name:"database",route:"/database"},{kind:"MdxPage",name:"demo",route:"/demo"},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"protocol",route:"/protocol",children:[{kind:"Meta",data:{index:{title:"Protocol Overview",type:"page"},authentication:{title:"Authentication",type:"page"},private_chat:{title:"Private Chat",type:"page"},group_chat:{title:"Group Chat",type:"page"},presence:"Presence"}},{kind:"MdxPage",name:"authentication",route:"/protocol/authentication"},{kind:"MdxPage",name:"group_chat",route:"/protocol/group_chat"},{kind:"MdxPage",name:"index",route:"/protocol"},{kind:"MdxPage",name:"presence",route:"/protocol/presence"},{kind:"MdxPage",name:"private_chat",route:"/protocol/private_chat"}]},{kind:"MdxPage",name:"sequence",route:"/sequence"},{kind:"Folder",name:"sequences",route:"/sequences",children:[{kind:"MdxPage",name:"authentication",route:"/sequences/authentication"},{kind:"MdxPage",name:"group_chat",route:"/sequences/group_chat"},{kind:"MdxPage",name:"presence",route:"/sequences/presence"},{kind:"MdxPage",name:"private_chat",route:"/sequences/private_chat"},{kind:"Meta",data:{authentication:"Authentication",group_chat:"Group Chat",presence:"Presence",private_chat:"Private Chat"}}]},{kind:"MdxPage",name:"stress-test",route:"/stress-test"},{kind:"MdxPage",name:"uml",route:"/uml"}],flexsearch:{codeblocks:!0},readingTime:{text:"0 min read",minutes:0,time:0,words:0},title:"Authentication",headings:c},pageNextRoute:"/sequences/authentication",nextraLayout:i.ZP,themeConfig:s.Z};t.default=(0,a.j)(d)},3209:function(e,t,n){"use strict";var r=n(5893),a=n(7656),i=n(1163);let s={logo:(0,r.jsxs)("div",{className:"flex items-center",children:[(0,r.jsx)(a.Z,{size:24,className:"mr-2"}),(0,r.jsx)("span",{className:"font-bold text-xl",children:"Whisper Chat"})]}),project:{link:"https://github.com/ukeSJTU/whisper"},docsRepositoryBase:"https://github.com/ukeSJTU/whisper-docs",footer:{text:(0,r.jsxs)("span",{children:["\xa9 ",new Date().getFullYear()," Whisper Chat. All rights reserved."]})},useNextSeoProps(){let{asPath:e}=(0,i.useRouter)();return{titleTemplate:"/"!==e?"%s – Whisper Chat":"Whisper Chat - Secure Real-Time Communication",description:"Whisper is a modern, secure web-based chat application for real-time communication."}},head:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,r.jsx)("meta",{name:"description",content:"Whisper is a modern, secure web-based chat application for real-time communication."}),(0,r.jsx)("meta",{name:"og:title",content:"Whisper Chat"}),(0,r.jsx)("link",{rel:"icon",href:"/favicon.ico"})]}),banner:{key:"whisper-release",text:(0,r.jsxs)("span",{children:["\uD83C\uDF89 Try Whisper Chat online →"," ",(0,r.jsx)("a",{href:"https://whisper.ukehome.top",children:"whisper"})]})},primaryHue:{dark:260,light:180},navigation:{prev:!0,next:!0},darkMode:!0,nextThemes:{defaultTheme:"system"}};t.Z=s},5789:function(){},8757:function(e,t,n){"use strict";n.d(t,{G:function(){return s}});var r=n(5893),a=n(7294),i=n(7541);function s({chart:e}){let t=(0,a.useId)(),[n,s]=(0,a.useState)("");return(0,a.useEffect)(()=>{let n=document.documentElement,r=new MutationObserver(a);return r.observe(n,{attributes:!0}),a(),()=>{r.disconnect()};async function a(){let r=n.classList.contains("dark")||n.attributes.getNamedItem("data-theme")?.value==="dark";try{i.N.initialize({startOnLoad:!1,securityLevel:"loose",fontFamily:"inherit",themeCSS:"margin: 1.5rem auto 0;",theme:r?"dark":"default"});let{svg:n}=await i.N.render(t.replaceAll(":",""),e);s(n)}catch(e){console.error("Error while rendering mermaid",e)}}},[e]),(0,r.jsx)("div",{dangerouslySetInnerHTML:{__html:n}})}}},function(e){e.O(0,[7163,2114,3542,2888,9774,179],function(){return e(e.s=8574)}),_N_E=e.O()}]);